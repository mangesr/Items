{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ShowsComponent = class ShowsComponent {\n  constructor(newServis) {\n    this.newServis = newServis;\n    this.isSameUser = true;\n    this.editUser = {\n      id: -1,\n      name: \"\",\n      phone: \"\",\n      email: \"\"\n    };\n  }\n  ngOnInit() {}\n  edit(user, i) {\n    this.editUser = {\n      id: user.id,\n      name: user.name,\n      phone: user.phone,\n      email: user.email\n    };\n    if (this.editUser.id === user.id) {\n      this.isSameUser = true;\n    }\n    this.isSameUser = false;\n    this.newServis.users[i].editMode = true;\n  }\n  save(user, i) {\n    console.log(user, this.editUser);\n    const indexExist = this.newServis.users.findIndex(x => x.id === user.id);\n    if (indexExist !== 1) {\n      this.newServis.users.push(this.editUser);\n      this.isSameUser = false;\n    }\n    console.log(\"this.editUser: \" + this.editUser.id);\n    console.log(\"the array: \" + this.newServis.users);\n    // \n  }\n\n  cancel(user) {\n    user.editMode = false;\n    this.isSameUser = true;\n  }\n  delete(u, i) {\n    if (u.id === this.editUser.id) {\n      if (this.newServis.users[i] === u) {\n        this.newServis.users.splice(i, 1);\n        this.isSameUser = true;\n      }\n    }\n    console.log(i, this.newServis.users);\n  }\n};\nShowsComponent = __decorate([Component({\n  selector: 'app-shows',\n  templateUrl: './shows.component.html',\n  styleUrls: ['./shows.component.css']\n})], ShowsComponent);","map":{"version":3,"names":["Component","ShowsComponent","constructor","newServis","isSameUser","editUser","id","name","phone","email","ngOnInit","edit","user","i","users","editMode","save","console","log","indexExist","findIndex","x","push","cancel","delete","u","splice","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mangesr\\Desktop\\angula\\my-app\\src\\app\\shows\\shows.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { User } from '../userInterface';\nimport { ServiceService } from '../service.service';\n\n\n\n@Component({\n  selector: 'app-shows',\n  templateUrl: './shows.component.html',\n  styleUrls: ['./shows.component.css']\n})\nexport class ShowsComponent implements OnInit{\n\n  isSameUser=true\n  editUser: User ={\n    id:-1,\n    name:\"\",\n    phone:\"\",\n    email :\"\",\n  }\n\n  constructor(public newServis:ServiceService){}\n  \n\n  ngOnInit(): void {\n  }\n\n  edit(user:User,i:number){\n  \n    this.editUser = {\n      id:user.id,\n      name:user.name,\n      phone:user.phone,\n      email:user.email,\n    \n  }\n    if(this.editUser.id===user.id){\n      this.isSameUser=true\n     }\n     this.isSameUser=false\n\n\n    this.newServis.users[i].editMode=true;\n   \n\n  }\n  \n save(user:User,i:number){\n  console.log(user,this.editUser);\n  const indexExist = this.newServis.users.findIndex(x=>x.id===user.id) \n   if(indexExist!==1 ){\n    this.newServis.users.push(this.editUser)\n    this.isSameUser=false\n    \n  }    \n  console.log(\"this.editUser: \"+this.editUser.id);\n  console.log(\"the array: \"+this.newServis.users)\n  // \n}\n\n  cancel(user:User){\n    user.editMode=false;\n    this.isSameUser=true\n  }\n\n\n  delete(u:User,i:number){\n    if(u.id===this.editUser.id){   \n      if(this.newServis.users[i]===u){\n        this.newServis.users.splice(i,1)\n        this.isSameUser=true\n\n      }\n    }\n\n console.log(i,this.newServis.users)\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAA4C,eAAe;AAWtE,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAUzBC,YAAmBC,SAAwB;IAAxB,KAAAA,SAAS,GAATA,SAAS;IAR5B,KAAAC,UAAU,GAAC,IAAI;IACf,KAAAC,QAAQ,GAAQ;MACdC,EAAE,EAAC,CAAC,CAAC;MACLC,IAAI,EAAC,EAAE;MACPC,KAAK,EAAC,EAAE;MACRC,KAAK,EAAE;KACR;EAE4C;EAG7CC,QAAQA,CAAA,GACR;EAEAC,IAAIA,CAACC,IAAS,EAACC,CAAQ;IAErB,IAAI,CAACR,QAAQ,GAAG;MACdC,EAAE,EAACM,IAAI,CAACN,EAAE;MACVC,IAAI,EAACK,IAAI,CAACL,IAAI;MACdC,KAAK,EAACI,IAAI,CAACJ,KAAK;MAChBC,KAAK,EAACG,IAAI,CAACH;KAEd;IACC,IAAG,IAAI,CAACJ,QAAQ,CAACC,EAAE,KAAGM,IAAI,CAACN,EAAE,EAAC;MAC5B,IAAI,CAACF,UAAU,GAAC,IAAI;;IAErB,IAAI,CAACA,UAAU,GAAC,KAAK;IAGtB,IAAI,CAACD,SAAS,CAACW,KAAK,CAACD,CAAC,CAAC,CAACE,QAAQ,GAAC,IAAI;EAGvC;EAEDC,IAAIA,CAACJ,IAAS,EAACC,CAAQ;IACtBI,OAAO,CAACC,GAAG,CAACN,IAAI,EAAC,IAAI,CAACP,QAAQ,CAAC;IAC/B,MAAMc,UAAU,GAAG,IAAI,CAAChB,SAAS,CAACW,KAAK,CAACM,SAAS,CAACC,CAAC,IAAEA,CAAC,CAACf,EAAE,KAAGM,IAAI,CAACN,EAAE,CAAC;IACnE,IAAGa,UAAU,KAAG,CAAC,EAAE;MAClB,IAAI,CAAChB,SAAS,CAACW,KAAK,CAACQ,IAAI,CAAC,IAAI,CAACjB,QAAQ,CAAC;MACxC,IAAI,CAACD,UAAU,GAAC,KAAK;;IAGvBa,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAC,IAAI,CAACb,QAAQ,CAACC,EAAE,CAAC;IAC/CW,OAAO,CAACC,GAAG,CAAC,aAAa,GAAC,IAAI,CAACf,SAAS,CAACW,KAAK,CAAC;IAC/C;EACF;;EAEES,MAAMA,CAACX,IAAS;IACdA,IAAI,CAACG,QAAQ,GAAC,KAAK;IACnB,IAAI,CAACX,UAAU,GAAC,IAAI;EACtB;EAGAoB,MAAMA,CAACC,CAAM,EAACZ,CAAQ;IACpB,IAAGY,CAAC,CAACnB,EAAE,KAAG,IAAI,CAACD,QAAQ,CAACC,EAAE,EAAC;MACzB,IAAG,IAAI,CAACH,SAAS,CAACW,KAAK,CAACD,CAAC,CAAC,KAAGY,CAAC,EAAC;QAC7B,IAAI,CAACtB,SAAS,CAACW,KAAK,CAACY,MAAM,CAACb,CAAC,EAAC,CAAC,CAAC;QAChC,IAAI,CAACT,UAAU,GAAC,IAAI;;;IAK3Ba,OAAO,CAACC,GAAG,CAACL,CAAC,EAAC,IAAI,CAACV,SAAS,CAACW,KAAK,CAAC;EAClC;CAED;AAnEYb,cAAc,GAAA0B,UAAA,EAL1B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW7B,cAAc,CAmE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}