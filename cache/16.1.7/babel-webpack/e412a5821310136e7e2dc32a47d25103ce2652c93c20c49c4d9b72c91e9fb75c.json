{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let FormComponent = class FormComponent {\n  constructor(fb, newarr) {\n    this.fb = fb;\n    this.newarr = newarr;\n    this.hasError = false;\n  }\n  ngOnInit() {\n    this.newGroup = this.fb.group({\n      name: [\" \", Validators.required],\n      phone: ['10', [Validators.required, Validators.pattern('[0-9]*')]],\n      email: [\"@ \", [Validators.required, Validators.email]]\n    });\n  }\n  addUser() {\n    if (this.newGroup.invalid) {\n      alert(\"not valid\");\n    } else this.newarr.users.push(this.newGroup.value);\n  }\n};\nFormComponent = __decorate([Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})], FormComponent);","map":{"version":3,"names":["Component","Validators","FormComponent","constructor","fb","newarr","hasError","ngOnInit","newGroup","group","name","required","phone","pattern","email","addUser","invalid","alert","users","push","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mangesr\\Desktop\\angula\\my-app\\src\\app\\form\\form.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from '../userInterface';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Validator } from '@angular/forms';\nimport { ServiceService } from '../service.service';\nimport { find } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  \n  newGroup!: FormGroup;\n  hasError = false;\n  \n  \n\n    constructor(private fb: FormBuilder,private newarr:ServiceService) {\n     \n    }\n\n    ngOnInit() {\n      this.newGroup = this.fb.group({\n        \n        name: [\" \",Validators.required],\n        phone: ['10', [Validators.required, Validators.pattern('[0-9]*')]],\n        email: [\"@ \",[Validators.required, Validators.email]],\n\n      });\n    }\n\n    addUser() {\n      if(this.newGroup.invalid){\n        alert(\"not valid\")\n  } else\n      this.newarr.users.push(this.newGroup.value);\n\n    }\n\n    \n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAE5D,SAA8CC,UAAU,QAAQ,gBAAgB;AAYzE,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAQtBC,YAAoBC,EAAe,EAASC,MAAqB;IAA7C,KAAAD,EAAE,GAAFA,EAAE;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAJpD,KAAAC,QAAQ,GAAG,KAAK;EAMd;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAE5BC,IAAI,EAAE,CAAC,GAAG,EAACT,UAAU,CAACU,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,IAAI,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;MAClEC,KAAK,EAAE,CAAC,IAAI,EAAC,CAACb,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACa,KAAK,CAAC;KAErD,CAAC;EACJ;EAEAC,OAAOA,CAAA;IACL,IAAG,IAAI,CAACP,QAAQ,CAACQ,OAAO,EAAC;MACvBC,KAAK,CAAC,WAAW,CAAC;KACvB,MACG,IAAI,CAACZ,MAAM,CAACa,KAAK,CAACC,IAAI,CAAC,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAC;EAE7C;CAIH;AAhCYlB,aAAa,GAAAmB,UAAA,EALzBrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWtB,aAAa,CAgCzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}