{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ShowsComponent = class ShowsComponent {\n  // isSameUser = true;\n  // editUser: User = {\n  //   id: -1,\n  //   name: '',\n  //   phone: '',\n  //   email: '',\n  // };\n  constructor(newServis) {\n    this.newServis = newServis;\n  }\n  ngOnInit() {}\n  // edit(user: User, i: number) {\n  //   this.editUser = {\n  //     id: user.id,\n  //     name: user.name,\n  //     phone: user.phone,\n  //     email: user.email,\n  //   };\n  //   if (this.editUser.id === user.id) {\n  //     this.isSameUser = true;\n  //   }\n  //   this.isSameUser = false;\n  //   this.newServis.users[i].editMode = true;\n  // }\n  // save(user: User, i: number) {\n  //   console.log(this.editUser);\n  //     const indexExist = this.newServis.users.findIndex((x) => x.id === user.id);\n  //     if (indexExist !== -1) {\n  //       this.newServis.users.splice(indexExist, 1, this.editUser)\n  //       user.editMode = false;\n  //       this.isSameUser = true\n  //     } \n  // }\n  // cancel(user: User) {\n  //   user.editMode = false;\n  //   this.isSameUser = true;\n  // }\n  // delete(u: User, i: number) {\n  //   if (u.id === this.editUser.id) {\n  //     if (this.newServis.users[i] === u) {\n  //       this.newServis.users.splice(i, 1);\n  //       this.isSameUser = true;\n  //     }\n  //   }\n  //   console.log(i, this.newServis.users);\n  // }\n  MyCtrl($scope) {\n    $scope.this.newServis.users = [{\n      id: 1,\n      firstName: 'Ivan',\n      phone: 'Ivanov',\n      email: 'email@email.com'\n    }];\n    $scope.emailRegExp = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/;\n  }\n};\nShowsComponent = __decorate([Component({\n  selector: 'app-shows',\n  templateUrl: './shows.component.html',\n  styleUrls: ['./shows.component.css']\n})], ShowsComponent);","map":{"version":3,"names":["Component","ShowsComponent","constructor","newServis","ngOnInit","MyCtrl","$scope","this","users","id","firstName","phone","email","emailRegExp","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\mangesr\\Desktop\\angula\\my-app\\src\\app\\shows\\shows.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../userInterface';\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-shows',\n  templateUrl: './shows.component.html',\n  styleUrls: ['./shows.component.css']\n})\nexport class ShowsComponent implements OnInit {\n  // isSameUser = true;\n  // editUser: User = {\n  //   id: -1,\n  //   name: '',\n  //   phone: '',\n  //   email: '',\n  // };\n\n  constructor(public newServis: ServiceService) {}\n\n  ngOnInit(): void {}\n\n  // edit(user: User, i: number) {\n  //   this.editUser = {\n  //     id: user.id,\n  //     name: user.name,\n  //     phone: user.phone,\n  //     email: user.email,\n  //   };\n\n  //   if (this.editUser.id === user.id) {\n  //     this.isSameUser = true;\n  //   }\n  //   this.isSameUser = false;\n\n  //   this.newServis.users[i].editMode = true;\n  // }\n\n  // save(user: User, i: number) {\n  //   console.log(this.editUser);\n  //     const indexExist = this.newServis.users.findIndex((x) => x.id === user.id);\n  //     if (indexExist !== -1) {\n  //       this.newServis.users.splice(indexExist, 1, this.editUser)\n  //       user.editMode = false;\n  //       this.isSameUser = true\n  //     } \n    \n  // }\n\n  // cancel(user: User) {\n  //   user.editMode = false;\n  //   this.isSameUser = true;\n  // }\n\n  // delete(u: User, i: number) {\n  //   if (u.id === this.editUser.id) {\n  //     if (this.newServis.users[i] === u) {\n  //       this.newServis.users.splice(i, 1);\n  //       this.isSameUser = true;\n  //     }\n  //   }\n  //   console.log(i, this.newServis.users);\n  // }\n\n\n   MyCtrl($scope: { this: { newServis: { users: { id: number; firstName: string; phone: string; email: string; }[]; }; }; emailRegExp: RegExp; }) {\n    $scope.this.newServis.users = [\n        {\n            id: 1,\n            firstName: 'Ivan',\n            phone: 'Ivanov',\n            email: 'email@email.com'\n        }\n       \n    ];\n\n    $scope.emailRegExp = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$/; \n}\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EACzB;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,YAAmBC,SAAyB;IAAzB,KAAAA,SAAS,GAATA,SAAS;EAAmB;EAE/CC,QAAQA,CAAA,GAAU;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGCC,MAAMA,CAACC,MAAsI;IAC5IA,MAAM,CAACC,IAAI,CAACJ,SAAS,CAACK,KAAK,GAAG,CAC1B;MACIC,EAAE,EAAE,CAAC;MACLC,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;KACV,CAEJ;IAEDN,MAAM,CAACO,WAAW,GAAG,mDAAmD;EAC5E;CACC;AArEYZ,cAAc,GAAAa,UAAA,EAL1Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWhB,cAAc,CAqE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}