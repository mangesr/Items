{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ShowsComponent = class ShowsComponent {\n  constructor(newServis) {\n    this.newServis = newServis;\n    this.isSameUser = true;\n    this.editUser = {\n      id: -1,\n      name: '',\n      phone: '',\n      email: ''\n    };\n    this.userInteractions = {};\n  }\n  ngOnInit() {}\n  edit(user, i) {\n    this.editUser = {\n      ...user\n    }; // Create a copy of the user to avoid modifying the original user object\n    this.isSameUser = this.editUser.id === user.id;\n    user.editMode = true;\n  }\n  save(user, i) {\n    const indexExist = this.newServis.users.findIndex(x => x.id === user.id);\n    if (indexExist !== -1) {\n      this.newServis.users[indexExist] = this.editUser;\n      user.editMode = false;\n      this.isSameUser = true;\n      this.editUser = {\n        id: -1,\n        name: '',\n        phone: '',\n        email: ''\n      }; // Reset the editUser object\n    }\n  }\n};\n\nShowsComponent = __decorate([Component({\n  selector: 'app-shows',\n  templateUrl: './shows.component.html',\n  styleUrls: ['./shows.component.css']\n})], ShowsComponent);\ncancel(user, User);\n{\n  user.editMode = false;\n  this.isSameUser = true;\n  this.editUser = {\n    id: -1,\n    name: '',\n    phone: '',\n    email: ''\n  }; // Reset the editUser object\n}\n\ndeletes(u, User, i, number);\n{\n  if (u.id === this.editUser.id) {\n    if (this.newServis.users[i] === u) {\n      this.newServis.users.splice(i, 1);\n      this.isSameUser = true;\n    }\n  }\n}\n// isValidInput(user: User): boolean {\n//   return this.isValidEmail(user.email) && this.isValidPhone(user.phone) && user.name.trim() !== '';\n// }\n// isValidEmail(email: string): boolean {\n//   return /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/.test(email);\n// }\n// isValidPhone(phone: string): boolean {\n//   return /[0-9]{10}/.test(phone);\n// }\n// validateField(fieldName: string, index: number) {\n//   this.userInteractions[fieldName + index] = true;\n// }\n// userHasInteracted(fieldName: string, index: number): boolean {\n//   return this.userInteractions[fieldName + index];\n// }","map":{"version":3,"names":["Component","ShowsComponent","constructor","newServis","isSameUser","editUser","id","name","phone","email","userInteractions","ngOnInit","edit","user","i","editMode","save","indexExist","users","findIndex","x","__decorate","selector","templateUrl","styleUrls","cancel","User","deletes","u","number","splice"],"sources":["C:\\Users\\mangesr\\Desktop\\angula\\my-app\\src\\app\\shows\\shows.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { User } from '../userInterface';\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-shows',\n  templateUrl: './shows.component.html',\n  styleUrls: ['./shows.component.css']\n})\nexport class ShowsComponent implements OnInit {\n  isSameUser = true;\n  editUser: User = {\n    id: -1,\n    name: '',\n    phone: '',\n    email: '',\n  };\n\n  private userInteractions: { [key: string]: boolean } = {};\n\n  constructor(public newServis: ServiceService) {}\n\n  ngOnInit(): void {}\n\n  edit(user: User, i: number) {\n    this.editUser = { ...user }; // Create a copy of the user to avoid modifying the original user object\n    this.isSameUser = this.editUser.id === user.id;\n    user.editMode = true;\n  }\n  save(user: User, i: number) {\n    const indexExist = this.newServis.users.findIndex((x) => x.id === user.id);\n      if (indexExist !== -1) {\n        this.newServis.users[indexExist] = this.editUser;\n        user.editMode = false;\n        this.isSameUser = true;\n        this.editUser = { id: -1, name: '', phone: '', email: '' }; // Reset the editUser object\n      }\n    }\n  }\n  \n  cancel(user: User) {\n    user.editMode = false;\n    this.isSameUser = true;\n    this.editUser = { id: -1, name: '', phone: '', email: '' }; // Reset the editUser object\n  }\n  \n  deletes(u: User, i: number) {\n    if (u.id === this.editUser.id) {\n      if (this.newServis.users[i] === u) {\n        this.newServis.users.splice(i, 1);\n        this.isSameUser = true;\n      }\n    }\n  }\n\n  // isValidInput(user: User): boolean {\n  //   return this.isValidEmail(user.email) && this.isValidPhone(user.phone) && user.name.trim() !== '';\n  // }\n\n  // isValidEmail(email: string): boolean {\n  //   return /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/.test(email);\n  // }\n\n  // isValidPhone(phone: string): boolean {\n  //   return /[0-9]{10}/.test(phone);\n  // }\n\n  // validateField(fieldName: string, index: number) {\n  //   this.userInteractions[fieldName + index] = true;\n  // }\n\n  // userHasInteracted(fieldName: string, index: number): boolean {\n  //   return this.userInteractions[fieldName + index];\n  // }\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAWzBC,YAAmBC,SAAyB;IAAzB,KAAAA,SAAS,GAATA,SAAS;IAV5B,KAAAC,UAAU,GAAG,IAAI;IACjB,KAAAC,QAAQ,GAAS;MACfC,EAAE,EAAE,CAAC,CAAC;MACNC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;KACR;IAEO,KAAAC,gBAAgB,GAA+B,EAAE;EAEV;EAE/CC,QAAQA,CAAA,GAAU;EAElBC,IAAIA,CAACC,IAAU,EAAEC,CAAS;IACxB,IAAI,CAACT,QAAQ,GAAG;MAAE,GAAGQ;IAAI,CAAE,CAAC,CAAC;IAC7B,IAAI,CAACT,UAAU,GAAG,IAAI,CAACC,QAAQ,CAACC,EAAE,KAAKO,IAAI,CAACP,EAAE;IAC9CO,IAAI,CAACE,QAAQ,GAAG,IAAI;EACtB;EACAC,IAAIA,CAACH,IAAU,EAAEC,CAAS;IACxB,MAAMG,UAAU,GAAG,IAAI,CAACd,SAAS,CAACe,KAAK,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACd,EAAE,KAAKO,IAAI,CAACP,EAAE,CAAC;IACxE,IAAIW,UAAU,KAAK,CAAC,CAAC,EAAE;MACrB,IAAI,CAACd,SAAS,CAACe,KAAK,CAACD,UAAU,CAAC,GAAG,IAAI,CAACZ,QAAQ;MAChDQ,IAAI,CAACE,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACX,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,QAAQ,GAAG;QAAEC,EAAE,EAAE,CAAC,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAE,CAAE,CAAC,CAAC;;EAEhE;CACD;;AA7BUR,cAAc,GAAAoB,UAAA,EAL1BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWvB,cAAc,CA6BxB;AAEDwB,MAAM,CAACZ,IAAI,EAAEa,IAAI,CAAC;AAAC;EACjBb,IAAI,CAACE,QAAQ,GAAG,KAAK;EACrB,IAAI,CAACX,UAAU,GAAG,IAAI;EACtB,IAAI,CAACC,QAAQ,GAAG;IAAEC,EAAE,EAAE,CAAC,CAAC;IAAEC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAE,CAAC,CAAC;;;AAG9DkB,OAAO,CAACC,CAAC,EAAEF,IAAI,EAAEZ,CAAC,EAAEe,MAAM,CAAC;AAAC;EAC1B,IAAID,CAAC,CAACtB,EAAE,KAAK,IAAI,CAACD,QAAQ,CAACC,EAAE,EAAE;IAC7B,IAAI,IAAI,CAACH,SAAS,CAACe,KAAK,CAACJ,CAAC,CAAC,KAAKc,CAAC,EAAE;MACjC,IAAI,CAACzB,SAAS,CAACe,KAAK,CAACY,MAAM,CAAChB,CAAC,EAAE,CAAC,CAAC;MACjC,IAAI,CAACV,UAAU,GAAG,IAAI;;;;AAK5B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}